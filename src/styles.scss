// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.
@import './styles/palettes';
@import url('https://fonts.googleapis.com/css2?family=Raleway:wght@300;400;700&display=swap');
// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$jewelryEcommerceClient-primary: mat.define-palette($primary);
$jewelryEcommerceClient-accent: mat.define-palette($secondary);

// The warn palette is optional (defaults to red).
$jewelryEcommerceClient-warn: mat.define-palette($warn);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$jewelryEcommerceClient-theme: mat.define-light-theme((
  color: (
    primary: $jewelryEcommerceClient-primary,
    accent: $jewelryEcommerceClient-accent,
    warn: $jewelryEcommerceClient-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($jewelryEcommerceClient-theme);

/* You can add global styles to this file, and also import other style files */
* {
  box-sizing: border-box;
}
html, body {
  height: 100%;
  overflow-x: hidden;
  background-color: map-get($surface, 500);
}
body {
  margin: 0;
  font-family: 'Raleway', sans-serif;
}

ul {
  padding-inline-start: 0;
}